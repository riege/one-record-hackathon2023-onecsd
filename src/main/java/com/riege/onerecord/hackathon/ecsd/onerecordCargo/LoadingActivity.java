
package com.riege.onerecord.hackathon.ecsd.onerecordCargo;

import java.io.Serializable;
import java.util.Set;

import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLDataProperty;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;


/**
 * Activity to describe onloading and offloading processes
 * 
 * This class was generated by OWL2Java 0.22.2
 * 
 */
@OWLClass(iri = Vocabulary.s_c_LoadingActivity)
public class LoadingActivity
    extends LogisticsActivity
    implements Serializable
{

    /**
     * References to all LoadingActions performed for the Loading Activity
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_loadingActions)
    protected Set<Loading> loadingActions;
    /**
     * Short text holding the process number if necessary
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_loadingIdentifier)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String loadingIdentifier;

    public void setLoadingActions(Set<Loading> loadingActions) {
        this.loadingActions = loadingActions;
    }

    public Set<Loading> getLoadingActions() {
        return loadingActions;
    }

    public void setLoadingIdentifier(String loadingIdentifier) {
        this.loadingIdentifier = loadingIdentifier;
    }

    public String getLoadingIdentifier() {
        return loadingIdentifier;
    }

}
